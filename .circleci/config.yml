# See https://circleci.com/docs/2.0/language-javascript/ for more details
version: 2
jobs:
  build:
    docker:
      - image: circleci/node:12.6
    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: npm run build
      - run: npm test

      # Store the `./build` directory to be used by subsequent steps; this way we don't risk
      # having the deploy step fail on some npm hiccup or accidentally deploy something different
      # from what's been tested. We build the artifacts once and use the same set throughout.
      - persist_to_workspace:
          root: "."
          paths:
            - build

  deploy-to-prod:
    docker:
      - image: circleci/node:12.6
    working_directory: ~/repo

    steps:
      - attach_workspace:
          at: "."
      - run: ls -al
      # - run: aws s3 rm s3://admin.cclcalls.org  --recursive 
      # - run: aws s3 cp ./build/ s3://admin.cclcalls.org/ --recursive --profile cclcalls-admin-ci

workflows:
  version: 2

  build-and-deploy:
    jobs:
      - build:
          # We only run this workflow when things are committed to master.
          filters:
            branches:
              only: 
                - master
                - fix-ci
      - hold: # Require manual action to pass this step
          type: approval
          requires: ["build"]
      - deploy-to-prod: # Deploys to prod
          requires: ["hold"]

  pr-build:
    jobs:
      - build:
          # No need to run this on master, since it's covered by the build-and-deploy flow
          filters:
            branches:
              ignore: master
